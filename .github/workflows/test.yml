name: 'build-test'
on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main

jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          npm install
      - run: |
          npm run all
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          valueFile: '__tests__/fixtures/values.yaml'
          propertyPath: 'backend.version'
          value: v1.0.1
          branch: deployment/v1.0.1
          targetBranch: main
          createPR: 'false'
          message: 'Update Image Version to v1.0.1'
          token: ${{ secrets.GH_TOKEN }}

  test-target-repository:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: infrastructure
      - name: Update values.yaml
        uses: ./infrastructure
        with:
          valueFile: '__tests__/fixtures/values.yaml'
          propertyPath: 'backend.version'
          value: v1.2.1
          branch: deployment/v1.2.1
          targetBranch: main
          createPR: 'false'
          message: 'Update Image Version to v1.2.1' 
          workDir: infrastructure
          token: ${{ secrets.GH_TOKEN }}

  test-update-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cat Original values.yaml
        run: cat __tests__/fixtures/values.yaml
      - name: Update values.yaml
        uses: ./
        with:
          valueFile: '__tests__/fixtures/values.yaml'
          propertyPath: 'backend.version'
          value: v1.0.1
          commitChange: 'false'
          updateFile: 'true'
      - name: Cat Updated values.yaml
        run: cat __tests__/fixtures/values.yaml
  
  test-multiple-file-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./
        with:
          valueFile: '__tests__/fixtures/values.dev.yaml'
          propertyPath: 'backend.version'
          value: v1.0.1
          branch: deployment/test-multi-file-update
          createPR: 'false'
          message: 'Update DEV Image'
          token: ${{ secrets.GH_TOKEN }}
      - uses: ./
        with:
          valueFile: '__tests__/fixtures/values.stage.yaml'
          propertyPath: 'backend.version'
          value: v1.0.1
          branch: deployment/test-multi-file-update
          createPR: 'false'
          message: 'Update STAGE Image'
          token: ${{ secrets.GH_TOKEN }}
      - uses: ./
        with:
          valueFile: '__tests__/fixtures/values.prod.yaml'
          propertyPath: 'backend.version'
          value: v1.0.1
          branch: deployment/test-multi-file-update
          targetBranch: main
          # createPR: 'true' # enable to create a PR for all changes
          description: Test GitHub Action
          message: 'Update PROD Image' 
          title: 'Version Update on all Environments'
          token: ${{ secrets.GH_TOKEN }}
